{"ast":null,"code":"import _slicedToArray from\"D:/__Project/SoccerStat/soccer-stat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import DateFnsUtils from'@date-io/date-fns';import{connect}from'react-redux';import{KeyboardDatePicker,MuiPickersUtilsProvider}from'@material-ui/pickers';import{nullifyDateFromTo as _nullifyDateFromTo,getDateFromTo as _getDateFromTo}from'../redux/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function formatDate(date){var d=new Date(date),month=''+(d.getMonth()+1),day=''+d.getDate(),year=d.getFullYear();if(month.length<2)month='0'+month;if(day.length<2)day='0'+day;return[year,month,day].join('-');}var CustomDatePicker=function CustomDatePicker(props){var getDateFromTo=props.getDateFromTo,starDateFromTo=props.starDateFromTo;var startDate=new Date();var andDate=new Date();if(starDateFromTo.dateTo&&starDateFromTo.dateFrom){startDate=new Date(starDateFromTo.dateFrom);andDate=new Date(starDateFromTo.dateTo);}var _useState=useState(startDate),_useState2=_slicedToArray(_useState,2),selectedDateFrom=_useState2[0],handleDateFromChange=_useState2[1];var _useState3=useState(andDate),_useState4=_slicedToArray(_useState3,2),selectedDateTo=_useState4[0],handleDateToChange=_useState4[1];useEffect(function(){var from=formatDate(selectedDateFrom);var to=formatDate(selectedDateTo);if(from!=='NaN-NaN-NaN'&&to!==\"NaN-NaN-NaN\"&&from!==undefined&&to!==undefined){getDateFromTo({dateFrom:from,dateTo:to});}},[selectedDateFrom,selectedDateTo,starDateFromTo.dateTo,starDateFromTo.dateFrom,getDateFromTo]);return/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsxs(\"div\",{className:\"date-pickers-wrap\",children:[/*#__PURE__*/_jsx(KeyboardDatePicker,{autoOk:true,variant:\"inline\",label:\"date from\",format:\"yyyy-MM-dd\",value:selectedDateFrom,InputAdornmentProps:{position:\"start\"},onChange:function onChange(date){return handleDateFromChange(date);}}),/*#__PURE__*/_jsx(KeyboardDatePicker,{autoOk:true,variant:\"inline\",label:\"date to\",format:\"yyyy-MM-dd\",value:selectedDateTo,InputAdornmentProps:{position:\"start\"},onChange:function onChange(date){return handleDateToChange(date);}})]})});};var mapStateToProps=function mapStateToProps(state){return{dateFromTo:state.leagues.dateFromTo};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getDateFromTo:function getDateFromTo(respons){return dispatch(_getDateFromTo(respons));},nullifyDateFromTo:function nullifyDateFromTo(){return dispatch(_nullifyDateFromTo());}};};export default connect(mapStateToProps,mapDispatchToProps)(CustomDatePicker);","map":{"version":3,"sources":["D:/__Project/SoccerStat/soccer-stat-app/src/components/DatePicker.tsx"],"names":["React","useState","useEffect","DateFnsUtils","connect","KeyboardDatePicker","MuiPickersUtilsProvider","nullifyDateFromTo","getDateFromTo","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","CustomDatePicker","props","starDateFromTo","startDate","andDate","dateTo","dateFrom","selectedDateFrom","handleDateFromChange","selectedDateTo","handleDateToChange","from","to","undefined","position","mapStateToProps","state","dateFromTo","leagues","mapDispatchToProps","dispatch","respons"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACEC,kBADF,CAEEC,uBAFF,KAGO,sBAHP,CAIA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,aAAa,GAAbA,CAAAA,cAA5B,KAAiD,kBAAjD,C,wFAGA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA+B,CAC7B,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,CAASF,IAAT,CAAR,CACEG,KAAK,CAAG,IAAMF,CAAC,CAACG,QAAF,GAAe,CAArB,CADV,CAEEC,GAAG,CAAG,GAAKJ,CAAC,CAACK,OAAF,EAFb,CAGEC,IAAI,CAAGN,CAAC,CAACO,WAAF,EAHT,CAKA,GAAIL,KAAK,CAACM,MAAN,CAAe,CAAnB,CACEN,KAAK,CAAG,IAAMA,KAAd,CACF,GAAIE,GAAG,CAACI,MAAJ,CAAa,CAAjB,CACEJ,GAAG,CAAG,IAAMA,GAAZ,CAEF,MAAO,CAACE,IAAD,CAAOJ,KAAP,CAAcE,GAAd,EAAmBK,IAAnB,CAAwB,GAAxB,CAAP,CACD,CAGD,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,IAE/Bd,CAAAA,aAF+B,CAEGc,KAFH,CAE/Bd,aAF+B,CAEhBe,cAFgB,CAEGD,KAFH,CAEhBC,cAFgB,CAKvC,GAAIC,CAAAA,SAAS,CAAG,GAAIZ,CAAAA,IAAJ,EAAhB,CACA,GAAIa,CAAAA,OAAO,CAAG,GAAIb,CAAAA,IAAJ,EAAd,CAEA,GAAIW,cAAc,CAACG,MAAf,EAAyBH,cAAc,CAACI,QAA5C,CAAsD,CACpDH,SAAS,CAAG,GAAIZ,CAAAA,IAAJ,CAASW,cAAc,CAACI,QAAxB,CAAZ,CACAF,OAAO,CAAG,GAAIb,CAAAA,IAAJ,CAASW,cAAc,CAACG,MAAxB,CAAV,CACD,CAXsC,cAaUzB,QAAQ,CAAMuB,SAAN,CAblB,wCAahCI,gBAbgC,eAadC,oBAbc,8BAcM5B,QAAQ,CAAMwB,OAAN,CAdd,yCAchCK,cAdgC,eAchBC,kBAdgB,eAkBvC7B,SAAS,CAAC,UAAM,CACd,GAAI8B,CAAAA,IAAI,CAAGvB,UAAU,CAACmB,gBAAD,CAArB,CACA,GAAIK,CAAAA,EAAE,CAAGxB,UAAU,CAACqB,cAAD,CAAnB,CAEA,GAAIE,IAAI,GAAK,aAAT,EAA0BC,EAAE,GAAK,aAAjC,EAAkDD,IAAI,GAAKE,SAA3D,EAAwED,EAAE,GAAKC,SAAnF,CAA8F,CAE5F1B,aAAa,CAAC,CACZmB,QAAQ,CAAEK,IADE,CAEZN,MAAM,CAAEO,EAFI,CAAD,CAAb,CAID,CAEF,CAZQ,CAYN,CAACL,gBAAD,CAAmBE,cAAnB,CAAmCP,cAAc,CAACG,MAAlD,CAA0DH,cAAc,CAACI,QAAzE,CAAmFnB,aAAnF,CAZM,CAAT,CAeA,mBACE,KAAC,uBAAD,EAAyB,KAAK,CAAEL,YAAhC,uBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,KAAC,kBAAD,EACE,MAAM,KADR,CAEE,OAAO,CAAC,QAFV,CAGE,KAAK,CAAC,WAHR,CAIE,MAAM,CAAC,YAJT,CAKE,KAAK,CAAEyB,gBALT,CAME,mBAAmB,CAAE,CAAEO,QAAQ,CAAE,OAAZ,CANvB,CAOE,QAAQ,CAAE,kBAACzB,IAAD,QAAemB,CAAAA,oBAAoB,CAACnB,IAAD,CAAnC,EAPZ,EADF,cAUE,KAAC,kBAAD,EACE,MAAM,KADR,CAEE,OAAO,CAAC,QAFV,CAGE,KAAK,CAAC,SAHR,CAIE,MAAM,CAAC,YAJT,CAKE,KAAK,CAAEoB,cALT,CAME,mBAAmB,CAAE,CAAEK,QAAQ,CAAE,OAAZ,CANvB,CAOE,QAAQ,CAAE,kBAACzB,IAAD,QAAeqB,CAAAA,kBAAkB,CAACrB,IAAD,CAAjC,EAPZ,EAVF,GADF,EADF,CAwBD,CAzDD,CA2DA,GAAM0B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACtC,MAAO,CACLC,UAAU,CAAED,KAAK,CAACE,OAAN,CAAcD,UADrB,CAAP,CAGD,CAJD,CAKA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAmB,CAC5C,MAAO,CACLjC,aAAa,CAAE,uBAACkC,OAAD,QAAqBD,CAAAA,QAAQ,CAACjC,cAAa,CAACkC,OAAD,CAAd,CAA7B,EADV,CAELnC,iBAAiB,CAAE,mCAAMkC,CAAAA,QAAQ,CAAClC,kBAAiB,EAAlB,CAAd,EAFd,CAAP,CAID,CALD,CAOA,cAAeH,CAAAA,OAAO,CAACgC,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CnB,gBAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { nullifyDateFromTo, getDateFromTo } from '../redux/actions';\r\n\r\n\r\nfunction formatDate(date: any) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2)\r\n    month = '0' + month;\r\n  if (day.length < 2)\r\n    day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\n\r\nconst CustomDatePicker = (props: any) => {\r\n\r\n  const { getDateFromTo, starDateFromTo } = props;\r\n\r\n\r\n  let startDate = new Date()\r\n  let andDate = new Date()\r\n\r\n  if (starDateFromTo.dateTo && starDateFromTo.dateFrom) {\r\n    startDate = new Date(starDateFromTo.dateFrom)\r\n    andDate = new Date(starDateFromTo.dateTo)\r\n  }\r\n\r\n  const [selectedDateFrom, handleDateFromChange] = useState<any>(startDate);\r\n  const [selectedDateTo, handleDateToChange] = useState<any>(andDate);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let from = formatDate(selectedDateFrom)\r\n    let to = formatDate(selectedDateTo)\r\n\r\n    if (from !== 'NaN-NaN-NaN' && to !== \"NaN-NaN-NaN\" && from !== undefined && to !== undefined) {\r\n\r\n      getDateFromTo({\r\n        dateFrom: from,\r\n        dateTo: to\r\n      })\r\n    }\r\n\r\n  }, [selectedDateFrom, selectedDateTo, starDateFromTo.dateTo, starDateFromTo.dateFrom, getDateFromTo]);\r\n\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n      <div className=\"date-pickers-wrap\">\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          label=\"date from\"\r\n          format=\"yyyy-MM-dd\"\r\n          value={selectedDateFrom}\r\n          InputAdornmentProps={{ position: \"start\" }}\r\n          onChange={(date: any) => handleDateFromChange(date)}\r\n        />\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          label=\"date to\"\r\n          format=\"yyyy-MM-dd\"\r\n          value={selectedDateTo}\r\n          InputAdornmentProps={{ position: \"start\" }}\r\n          onChange={(date: any) => handleDateToChange(date)}\r\n        />\r\n      </div>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    dateFromTo: state.leagues.dateFromTo,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    getDateFromTo: (respons: object) => dispatch(getDateFromTo(respons)),\r\n    nullifyDateFromTo: () => dispatch(nullifyDateFromTo()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomDatePicker)"]},"metadata":{},"sourceType":"module"}