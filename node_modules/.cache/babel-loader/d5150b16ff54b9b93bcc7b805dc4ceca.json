{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\__Project\\\\SoccerStat\\\\my-app\\\\src\\\\pages\\\\LeaguesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { requestLeagues } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport ItemLeagues from \"../components/ItemLeagues\";\nimport Warning from \"../components/Warning\";\nimport Loading from \"../components/Loading\";\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\n\nconst LeaguesList = props => {\n  _s();\n\n  const {\n    leagues,\n    loading,\n    requestLeagues,\n    errorMessage,\n    season\n  } = props;\n  useEffect(() => {\n    requestLeagues(); // console.log('season ', season)\n  }, []);\n\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (!leagues.length) {\n    return /*#__PURE__*/_jsxDEV(Warning, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), \" \\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u041B\\u0438\\u0433\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), leagues.map((league, index) => {\n      return /*#__PURE__*/_jsxDEV(ItemLeagues, {\n        id: league.id,\n        index: index + 1,\n        name: league.name\n      }, league.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeaguesList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LeaguesList;\n\nconst mapStateToProps = state => ({\n  leagues: state.leagues.leagues,\n  errorMessage: state.leagues.errorMessage,\n  loading: state.app.loading,\n  season: state.leagues.season\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestLeagues: () => dispatch(requestLeagues())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaguesList);\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaguesList\");","map":{"version":3,"sources":["D:/__Project/SoccerStat/my-app/src/pages/LeaguesList.tsx"],"names":["React","useEffect","requestLeagues","connect","ItemLeagues","Warning","Loading","SportsSoccerIcon","LeaguesList","props","leagues","loading","errorMessage","season","marginTop","length","map","league","index","id","name","mapStateToProps","state","app","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAEnC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBT,IAAAA,cAApB;AAAoCU,IAAAA,YAApC;AAAkDC,IAAAA;AAAlD,MAA6DJ,KAAnE;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,cAAc,GADC,CAEf;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIU,YAAJ,EAAkB;AACjB,wBAAO;AAAI,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA,gBAAmCF;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,MAAID,OAAJ,EAAa;AACZ,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,MAAI,CAACD,OAAO,CAACK,MAAb,EAAqB;AACpB,wBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACN;AAAA,8BAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,EAELL,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAAcC,KAAd,KAAgC;AAC5C,0BACC,QAAC,WAAD;AAA6B,QAAA,EAAE,EAAED,MAAM,CAACE,EAAxC;AAA4C,QAAA,KAAK,EAAED,KAAK,GAAG,CAA3D;AAA8D,QAAA,IAAI,EAAED,MAAM,CAACG;AAA3E,SAAkBH,MAAM,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AAGA,KAJA,CAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASA,CA/BD;;GAAMX,W;;KAAAA,W;;AAiCN,MAAMa,eAAe,GAAIC,KAAD,KAAiB;AACxCZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ,OAAN,CAAcA,OADiB;AAExCE,EAAAA,YAAY,EAAEU,KAAK,CAACZ,OAAN,CAAcE,YAFY;AAGxCD,EAAAA,OAAO,EAAEW,KAAK,CAACC,GAAN,CAAUZ,OAHqB;AAIxCE,EAAAA,MAAM,EAAES,KAAK,CAACZ,OAAN,CAAcG;AAJkB,CAAjB,CAAxB;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAmB;AAC7C,SAAO;AACNvB,IAAAA,cAAc,EAAE,MAAMuB,QAAQ,CAACvB,cAAc,EAAf;AADxB,GAAP;AAGA,CAJD;;AAMA,eAAeC,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { requestLeagues } from \"../redux/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport ItemLeagues from \"../components/ItemLeagues\";\r\nimport Warning from \"../components/Warning\";\r\nimport Loading from \"../components/Loading\";\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\n\r\n\r\n\r\nconst LeaguesList = (props: any) => {\r\n\r\n\tconst { leagues, loading, requestLeagues, errorMessage, season } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\trequestLeagues()\r\n\t\t// console.log('season ', season)\r\n\t}, [])\r\n\r\n\tif (errorMessage) {\r\n\t\treturn <h2 style={{ marginTop: \"50px\" }}>{errorMessage}</h2>\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!leagues.length) {\r\n\t\treturn (\r\n\t\t\t<Warning />\r\n\t\t)\r\n\t}\r\n\treturn <div className=\"content\">\r\n\t\t<h1><SportsSoccerIcon /> Список Лиг</h1>\r\n\t\t{leagues.map((league: any, index: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ItemLeagues key={league.id} id={league.id} index={index + 1} name={league.name} />\r\n\t\t\t)\r\n\t\t})\r\n\t\t}\r\n\t</div>\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tleagues: state.leagues.leagues,\r\n\terrorMessage: state.leagues.errorMessage,\r\n\tloading: state.app.loading,\r\n\tseason: state.leagues.season\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\trequestLeagues: () => dispatch(requestLeagues())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaguesList);"]},"metadata":{},"sourceType":"module"}