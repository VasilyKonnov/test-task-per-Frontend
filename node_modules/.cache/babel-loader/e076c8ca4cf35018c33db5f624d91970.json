{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\__Project\\\\SoccerStat\\\\soccer-stat-app\\\\src\\\\pages\\\\LeaguesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { requestLeagues } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport ItemLeagues from \"../components/ItemLeagues\";\nimport Warning from \"../components/Warning\";\nimport Loading from \"../components/Loading\";\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport Search from \"../components/Search/SearchView\";\n\nconst LeaguesList = props => {\n  _s();\n\n  const {\n    leagues,\n    loading,\n    requestLeagues,\n    errorMessage\n  } = props; // search state\n\n  const [searchValue, setSearchValue] = useState('');\n  const [allResult, setAllResult] = useState([]);\n  const [displayedResult, setDisplayedResult] = useState([]); // end search state\n\n  const handleSearchValue = event => {\n    setSearchValue(event.target.value);\n\n    if (searchValue.length > 1) {\n      searchText(displayedResult);\n    } else {\n      setDisplayedResult(allResult);\n    }\n  };\n\n  useEffect(() => {\n    requestLeagues();\n  }, []);\n\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (!leagues.length) {\n    return /*#__PURE__*/_jsxDEV(Warning, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), \" \\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u041B\\u0438\\u0433\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), leagues.map((league, index) => {\n      return /*#__PURE__*/_jsxDEV(ItemLeagues, {\n        id: league.id,\n        index: index + 1,\n        name: league.name\n      }, league.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeaguesList, \"d+c2sKIYFnLPKaH1d73rHhFho9E=\");\n\n_c = LeaguesList;\n\nconst mapStateToProps = state => ({\n  leagues: state.leagues.leagues,\n  errorMessage: state.leagues.errorMessage,\n  loading: state.app.loading,\n  season: state.leagues.season\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestLeagues: () => dispatch(requestLeagues())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaguesList);\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaguesList\");","map":{"version":3,"sources":["D:/__Project/SoccerStat/soccer-stat-app/src/pages/LeaguesList.tsx"],"names":["React","useEffect","useState","requestLeagues","connect","ItemLeagues","Warning","Loading","SportsSoccerIcon","Search","LeaguesList","props","leagues","loading","errorMessage","searchValue","setSearchValue","allResult","setAllResult","displayedResult","setDisplayedResult","handleSearchValue","event","target","value","length","searchText","marginTop","map","league","index","id","name","mapStateToProps","state","app","season","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { requestLeagues } from \"../redux/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport ItemLeagues from \"../components/ItemLeagues\";\r\nimport Warning from \"../components/Warning\";\r\nimport Loading from \"../components/Loading\";\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport HighlightText from \"../components/HighlightText\";\r\nimport Search from \"../components/Search/SearchView\"\r\n\r\n\r\n\r\nconst LeaguesList = (props: any) => {\r\n\tconst { leagues, loading, requestLeagues, errorMessage } = props;\r\n\r\n\t// search state\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [allResult, setAllResult] = useState([]);\r\n\tconst [displayedResult, setDisplayedResult] = useState([]);\r\n\t// end search state\r\n\r\n\r\n\r\n\tconst handleSearchValue = (event: any) => {\r\n\t\tsetSearchValue(event.target.value)\r\n\t\tif (searchValue.length > 1) {\r\n\t\t\tsearchText(displayedResult)\r\n\t\t} else {\r\n\t\t\tsetDisplayedResult(allResult)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\trequestLeagues()\r\n\t}, [])\r\n\r\n\r\n\tif (errorMessage) {\r\n\t\treturn <h2 style={{ marginTop: \"50px\" }}>{errorMessage}</h2>\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <Loading />\r\n\t}\r\n\r\n\tif (!leagues.length) {\r\n\t\treturn (\r\n\t\t\t<Warning />\r\n\t\t)\r\n\t}\r\n\r\n\treturn <div className=\"content\">\r\n\t\t<h1><SportsSoccerIcon /> Список Лиг</h1>\r\n\t\t<Search />\r\n\t\t{leagues.map((league: any, index: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ItemLeagues key={league.id} id={league.id} index={index + 1} name={league.name} />\r\n\t\t\t)\r\n\t\t})\r\n\t\t}\r\n\t</div>\r\n\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tleagues: state.leagues.leagues,\r\n\terrorMessage: state.leagues.errorMessage,\r\n\tloading: state.app.loading,\r\n\tseason: state.leagues.season\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\trequestLeagues: () => dispatch(requestLeagues())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaguesList);"]},"metadata":{},"sourceType":"module"}