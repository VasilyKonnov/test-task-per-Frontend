{"ast":null,"code":"import _slicedToArray from\"D:/__Project/SoccerStat/soccer-stat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import{getMatches}from'../requests/getData';import Loading from\"../components/Loading\";import SportsSoccerIcon from'@material-ui/icons/SportsSoccer';import PeopleIcon from'@material-ui/icons/People';import TableLeagueMatches from\"../components/TableLeagueMatches\";import CustomSelect from\"../components/Select\";import{connect}from\"react-redux\";import{getErrorMessage as _getErrorMessage,nullifyErrorMessage as _nullifyErrorMessage,nullifyYearSeason as _nullifyYearSeason,getDateFromTo as _getDateFromTo,nullifyDateFromTo as _nullifyDateFromTo}from\"../redux/actions\";import CustomDatePicker from\"../components/DatePicker\";import{Button}from\"@material-ui/core\";import{URL_LEAGUES,URL_COMANDS}from'./../constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LeagueCalendar=function LeagueCalendar(props){var season=props.season,getErrorMessage=props.getErrorMessage,nullifyErrorMessage=props.nullifyErrorMessage,errorMessage=props.errorMessage,nullifyYearSeason=props.nullifyYearSeason,dateFromTo=props.dateFromTo,url=props.url;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),league=_useState2[0],setLeague=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),count=_useState6[0],setCount=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),idLocalState=_useState8[0],setIdLocalState=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),yearSeason=_useState10[0],setYearSeason=_useState10[1];var _useState11=useState({dateFrom:'',dateTo:''}),_useState12=_slicedToArray(_useState11,2),fromTo=_useState12[0],setFromTo=_useState12[1];var history=useHistory();var getMatchesId=function getMatchesId(idLeague,seasonLeague,getDateFromToLeague){var year='';if(seasonLeague){year=seasonLeague;}var fromTo='';if(getDateFromToLeague){fromTo=getDateFromToLeague;}try{getMatches(url,idLeague,year,fromTo).then(function(result){if(result.message){return getErrorMessage(result.message);}var matches=result.matches.map(function(item){return{id:item.id,awayTeam:item.awayTeam.name,homeTeam:item.homeTeam.name,winner:item.score.winner,startDate:item.season.startDate,endDate:item.season.endDate,status:item.status};});nullifyErrorMessage();setLeague(matches);if(url===URL_LEAGUES){setTitle(result.competition.name);}setCount(result.count);});}catch(error){console.log(error);}};var getMatchesFromTo=function getMatchesFromTo(id,dateFromTo){nullifyYearSeason();setFromTo({dateFrom:'',dateTo:''});history.push(\"?dateFrom=\".concat(dateFromTo.dateFrom,\"&dateTo=\").concat(dateFromTo.dateTo));getMatchesId(id,null,dateFromTo);};useEffect(function(){setYearSeason('');setFromTo({dateFrom:'',dateTo:''});var id=\"\";if(url===URL_LEAGUES){id=history.location.pathname.substr(9);}if(url===URL_COMANDS){id=history.location.pathname.substr(7);}setIdLocalState(id);var idSeason='';var idDateFromTo={dateFrom:'',dateTo:''};setFromTo({dateFrom:'',dateTo:''});setYearSeason('');if(history.location.search.substr(1,6)==='season'){idSeason=history.location.search.substr(-4);setYearSeason(history.location.search.substr(-4));}if(history.location.search.substr(1,8)==='dateFrom'){idDateFromTo={dateFrom:history.location.search.substr(10,10),dateTo:history.location.search.substr(-10)};setFromTo({dateFrom:history.location.search.substr(10,10),dateTo:history.location.search.substr(-10)});}if(id&&idDateFromTo.dateFrom.length&&idDateFromTo.dateTo.length){getMatchesId(id,null,idDateFromTo);}else if(id&&idSeason){getMatchesId(id,idSeason);}else if(id&&season){getMatchesId(id,season);}else if(id){getMatchesId(id);}},[season,dateFromTo]);if(!league&&!errorMessage){return/*#__PURE__*/_jsx(Loading,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:/*#__PURE__*/_jsxs(_Fragment,{children:[url===URL_LEAGUES?/*#__PURE__*/_jsx(SportsSoccerIcon,{}):/*#__PURE__*/_jsx(PeopleIcon,{}),/*#__PURE__*/_jsxs(\"span\",{children:[title?title:\"\",\"  \",errorMessage?0:count,\" \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439\"]})]})}),url===URL_LEAGUES?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomSelect,{startValue:yearSeason?yearSeason:\"\"}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:\"0\"},children:\"\\u0438\\u043B\\u0438\"})]}):null,/*#__PURE__*/_jsx(CustomDatePicker,{starDateFromTo:fromTo.dateFrom.length&&fromTo.dateTo.length?fromTo:\"\"}),/*#__PURE__*/_jsx(Button,{className:\"search-matches\",onClick:function onClick(){return getMatchesFromTo(idLocalState,dateFromTo);},children:\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E \\u0434\\u0430\\u0442\\u0435 (\\u0441, \\u043F\\u043E)\"}),errorMessage?/*#__PURE__*/_jsx(\"h1\",{style:{marginTop:'50px'},children:errorMessage}):/*#__PURE__*/_jsx(TableLeagueMatches,{dataTable:league})]});};var mapStateToProps=function mapStateToProps(state){return{loading:state.app.loading,season:state.leagues.season,errorMessage:state.leagues.errorMessage,dateFromTo:state.leagues.dateFromTo};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getErrorMessage:function getErrorMessage(response){return dispatch(_getErrorMessage(response));},nullifyErrorMessage:function nullifyErrorMessage(){return dispatch(_nullifyErrorMessage());},nullifyYearSeason:function nullifyYearSeason(){return dispatch(_nullifyYearSeason());},getDateFromTo:function getDateFromTo(respons){return dispatch(_getDateFromTo(respons));},nullifyDateFromTo:function nullifyDateFromTo(){return dispatch(_nullifyDateFromTo());}};};export default connect(mapStateToProps,mapDispatchToProps)(LeagueCalendar);","map":{"version":3,"sources":["D:/__Project/SoccerStat/soccer-stat-app/src/pages/Matches.tsx"],"names":["React","useState","useEffect","useHistory","getMatches","Loading","SportsSoccerIcon","PeopleIcon","TableLeagueMatches","CustomSelect","connect","getErrorMessage","nullifyErrorMessage","nullifyYearSeason","getDateFromTo","nullifyDateFromTo","CustomDatePicker","Button","URL_LEAGUES","URL_COMANDS","LeagueCalendar","props","season","errorMessage","dateFromTo","url","league","setLeague","title","setTitle","count","setCount","idLocalState","setIdLocalState","yearSeason","setYearSeason","dateFrom","dateTo","fromTo","setFromTo","history","getMatchesId","idLeague","seasonLeague","getDateFromToLeague","year","then","result","message","matches","map","item","id","awayTeam","name","homeTeam","winner","score","startDate","endDate","status","competition","error","console","log","getMatchesFromTo","push","location","pathname","substr","idSeason","idDateFromTo","search","length","marginTop","mapStateToProps","state","loading","app","leagues","mapDispatchToProps","dispatch","response","respons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getMatches } from '../requests/getData';\r\nimport Loading from \"../components/Loading\";\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport TableLeagueMatches from \"../components/TableLeagueMatches\";\r\nimport CustomSelect from \"../components/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tgetErrorMessage,\r\n\tnullifyErrorMessage,\r\n\tnullifyYearSeason,\r\n\tgetDateFromTo,\r\n\tnullifyDateFromTo\r\n} from \"../redux/actions\";\r\nimport CustomDatePicker from \"../components/DatePicker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { URL_LEAGUES, URL_COMANDS } from './../constants';\r\n\r\n\r\nexport interface matchesInterface {\r\n\t[x: string]: any;\r\n\tid: number | string,\r\n\tawayTeam: any,\r\n\thomeTeam: any,\r\n\twinner: string,\r\n\tendDate: string,\r\n\tstartDate: string,\r\n\tstatus: string\r\n}\r\n\r\nexport interface objectSearchFromTo {\r\n\tdateFrom: number | string,\r\n\tdateTo: number | string,\r\n}\r\n\r\nconst LeagueCalendar = (props: any) => {\r\n\tconst {\r\n\t\tseason,\r\n\t\tgetErrorMessage,\r\n\t\tnullifyErrorMessage,\r\n\t\terrorMessage,\r\n\t\tnullifyYearSeason,\r\n\t\tdateFromTo,\r\n\t\turl\r\n\t} = props\r\n\r\n\tconst [league, setLeague] = useState(\"\")\r\n\tconst [title, setTitle] = useState(\"\")\r\n\tconst [count, setCount] = useState(\"\")\r\n\tconst [idLocalState, setIdLocalState] = useState('')\r\n\tconst [yearSeason, setYearSeason] = useState('')\r\n\tconst [fromTo, setFromTo] = useState({ dateFrom: '', dateTo: '' })\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst getMatchesId = (idLeague: any, seasonLeague?: any, getDateFromToLeague?: any) => {\r\n\t\tlet year = '';\r\n\t\tif (seasonLeague) {\r\n\t\t\tyear = seasonLeague;\r\n\t\t}\r\n\t\tlet fromTo = '';\r\n\t\tif (getDateFromToLeague) {\r\n\t\t\tfromTo = getDateFromToLeague;\r\n\t\t}\r\n\t\ttry {\r\n\r\n\t\t\tgetMatches(url, idLeague, year, fromTo).then(result => {\r\n\r\n\t\t\t\tif (result.message) {\r\n\t\t\t\t\treturn getErrorMessage(result.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst matches = result.matches.map((item: matchesInterface) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tawayTeam: item.awayTeam.name,\r\n\t\t\t\t\t\thomeTeam: item.homeTeam.name,\r\n\t\t\t\t\t\twinner: item.score.winner,\r\n\t\t\t\t\t\tstartDate: item.season.startDate,\r\n\t\t\t\t\t\tendDate: item.season.endDate,\r\n\t\t\t\t\t\tstatus: item.status\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tnullifyErrorMessage()\r\n\t\t\t\tsetLeague(matches)\r\n\t\t\t\tif (url === URL_LEAGUES) { setTitle(result.competition.name) }\r\n\t\t\t\tsetCount(result.count)\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getMatchesFromTo = (id: number | string, dateFromTo: objectSearchFromTo) => {\r\n\t\tnullifyYearSeason()\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\thistory.push(`?dateFrom=${dateFromTo.dateFrom}&dateTo=${dateFromTo.dateTo}`)\r\n\t\tgetMatchesId(id, null, dateFromTo)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetYearSeason('')\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\tlet id = \"\";\r\n\t\tif (url === URL_LEAGUES) { id = history.location.pathname.substr(9) }\r\n\t\tif (url === URL_COMANDS) { id = history.location.pathname.substr(7) }\r\n\r\n\t\tsetIdLocalState(id)\r\n\r\n\t\tlet idSeason = '';\r\n\t\tlet idDateFromTo = {\r\n\t\t\tdateFrom: '',\r\n\t\t\tdateTo: ''\r\n\t\t}\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\tsetYearSeason('')\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 6) === 'season') {\r\n\t\t\tidSeason = history.location.search.substr(-4);\r\n\t\t\tsetYearSeason(history.location.search.substr(-4))\r\n\t\t}\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 8) === 'dateFrom') {\r\n\t\t\tidDateFromTo = {\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t}\r\n\t\t\tsetFromTo({\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (id && idDateFromTo.dateFrom.length && idDateFromTo.dateTo.length) {\r\n\t\t\tgetMatchesId(id, null, idDateFromTo)\r\n\t\t} else if (id && idSeason) {\r\n\t\t\tgetMatchesId(id, idSeason);\r\n\t\t} else if (id && season) {\r\n\t\t\tgetMatchesId(id, season);\r\n\t\t} else if (id) {\r\n\t\t\tgetMatchesId(id);\r\n\t\t}\r\n\r\n\t}, [season, dateFromTo])\r\n\r\n\tif (!league && !errorMessage) {\r\n\t\treturn <Loading />\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1><>\r\n\t\t\t\t{url === URL_LEAGUES ? <SportsSoccerIcon /> : <PeopleIcon />}\r\n\t\t\t\t<span>{title ? title : \"\"}  {errorMessage ? 0 : count} матчей</span></></h1>\r\n\r\n\t\t\t{url === URL_LEAGUES\r\n\t\t\t\t?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<CustomSelect startValue={yearSeason ? yearSeason : \"\"} />\r\n\t\t\t\t\t<h3 style={{ marginTop: \"0\" }}>или</h3>\r\n\t\t\t\t</>\r\n\t\t\t\t:\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\r\n\r\n\t\t\t<CustomDatePicker\r\n\t\t\t\tstarDateFromTo={fromTo.dateFrom.length && fromTo.dateTo.length ? fromTo : \"\"}\r\n\t\t\t/>\r\n\t\t\t<Button className='search-matches' onClick={() => getMatchesFromTo(idLocalState, dateFromTo)}>Фильтр по дате (с, по)</Button>\r\n\t\t\t{\r\n\t\t\t\terrorMessage\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<h1 style={{ marginTop: '50px' }}>{errorMessage}</h1>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t< TableLeagueMatches dataTable={league} />\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tloading: state.app.loading,\r\n\tseason: state.leagues.season,\r\n\terrorMessage: state.leagues.errorMessage,\r\n\tdateFromTo: state.leagues.dateFromTo,\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tgetErrorMessage: (response: string) => dispatch(getErrorMessage(response)),\r\n\t\tnullifyErrorMessage: () => dispatch(nullifyErrorMessage()),\r\n\t\tnullifyYearSeason: () => dispatch(nullifyYearSeason()),\r\n\t\tgetDateFromTo: (respons: object) => dispatch(getDateFromTo(respons)),\r\n\t\tnullifyDateFromTo: () => dispatch(nullifyDateFromTo()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueCalendar);"]},"metadata":{},"sourceType":"module"}