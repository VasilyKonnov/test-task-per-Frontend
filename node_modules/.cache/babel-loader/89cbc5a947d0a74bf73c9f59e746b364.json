{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\__Project\\\\SoccerStat\\\\soccer-stat-app\\\\src\\\\pages\\\\Matches.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getMatches } from '../requests/getData';\nimport Loading from \"../components/Loading\";\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport TableLeagueMatches from \"../components/TableLeagueMatches\";\nimport CustomSelect from \"../components/Select\";\nimport { connect } from \"react-redux\";\nimport { getErrorMessage, nullifyErrorMessage, nullifyYearSeason, getDateFromTo, nullifyDateFromTo } from \"../redux/actions\";\nimport CustomDatePicker from \"../components/DatePicker\";\nimport { Button } from \"@material-ui/core\";\nimport { URL_LEAGUES } from './../constants'; // TODO: Вынести интерфейсы в отдельный файл \n\nconst LeagueCalendar = props => {\n  _s();\n\n  const {\n    season,\n    getErrorMessage,\n    nullifyErrorMessage,\n    errorMessage,\n    nullifyYearSeason,\n    dateFromTo,\n    url\n  } = props;\n  console.log('url = props ', url);\n  const [league, setLeague] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [idLocalState, setIdLocalState] = useState('');\n  const [yearSeason, setYearSeason] = useState('');\n  const [fromTo, setFromTo] = useState({\n    dateFrom: '',\n    dateTo: ''\n  });\n  const history = useHistory();\n\n  const getMatchesId = (idLeague, seasonLeague, getDateFromToLeague) => {\n    let year = '';\n\n    if (seasonLeague) {\n      year = seasonLeague;\n    }\n\n    let fromTo = '';\n\n    if (getDateFromToLeague) {\n      fromTo = getDateFromToLeague;\n    }\n\n    try {\n      getMatches(url, idLeague, year, fromTo).then(result => {\n        console.log('getMatches(url, idLeague, year, fromTo) - url - ', url);\n        console.log('getMatches(url, idLeague, year, fromTo) - id- ', idLeague);\n\n        if (result.message) {\n          return getErrorMessage(result.message);\n        }\n\n        const matches = result.matches.map(item => {\n          return {\n            id: item.id,\n            awayTeam: item.awayTeam.name,\n            homeTeam: item.homeTeam.name,\n            winner: item.score.winner,\n            startDate: item.season.startDate,\n            endDate: item.season.endDate,\n            status: item.status\n          };\n        });\n        nullifyErrorMessage();\n        setLeague(matches);\n\n        if (url === URL_LEAGUES) {\n          setTitle(result.competition.name);\n        }\n\n        if (url === URL_TEAMS) {\n          setTitle(result.competition.name);\n        }\n\n        setCount(result.count);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getMatchesFromTo = (id, dateFromTo) => {\n    nullifyYearSeason();\n    setFromTo({\n      dateFrom: '',\n      dateTo: ''\n    });\n    history.push(`?dateFrom=${dateFromTo.dateFrom}&dateTo=${dateFromTo.dateTo}`);\n    getMatchesId(id, null, dateFromTo);\n  };\n\n  useEffect(() => {\n    setYearSeason('');\n    setFromTo({\n      dateFrom: '',\n      dateTo: ''\n    });\n    const id = history.location.pathname.substr(7, 9);\n    console.log('history.location.pathname ', history.location.pathname);\n    setIdLocalState(id);\n    let idSeason = '';\n    let idDateFromTo = {\n      dateFrom: '',\n      dateTo: ''\n    };\n    setFromTo({\n      dateFrom: '',\n      dateTo: ''\n    });\n    setYearSeason('');\n\n    if (history.location.search.substr(1, 6) === 'season') {\n      console.log('history.location.search.substrsubstr(1, 6) - ', history.location.search.substr(1, 6));\n      idSeason = history.location.search.substr(-4);\n      setYearSeason(history.location.search.substr(-4));\n    }\n\n    if (history.location.search.substr(1, 8) === 'dateFrom') {\n      console.log('history.location.search.substr(1, 8) - ', history.location.search.substr(1, 8));\n      idDateFromTo = {\n        dateFrom: history.location.search.substr(10, 10),\n        dateTo: history.location.search.substr(-10)\n      };\n      setFromTo({\n        dateFrom: history.location.search.substr(10, 10),\n        dateTo: history.location.search.substr(-10)\n      });\n    }\n\n    if (id && idDateFromTo.dateFrom.length && idDateFromTo.dateTo.length) {\n      getMatchesId(id, null, idDateFromTo);\n    } else if (id && idSeason) {\n      getMatchesId(id, idSeason);\n    } else if (id && season) {\n      getMatchesId(id, season);\n    } else if (id) {\n      console.log('getMatchesId(id) ', id);\n      getMatchesId(id);\n    }\n  }, [season, dateFromTo]);\n  console.log('fromTo ', fromTo);\n  console.log('dateFromTo ', dateFromTo);\n\n  if (!league && !errorMessage) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [title, \" - \", errorMessage ? 0 : count, \" \\u043C\\u0430\\u0442\\u0447\\u0435\\u0439\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n        startValue: yearSeason ? yearSeason : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: \"0\"\n      },\n      children: \"\\u0438\\u043B\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CustomDatePicker, {\n      starDateFromTo: fromTo.dateFrom.length && fromTo.dateTo.length ? fromTo : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => getMatchesFromTo(idLocalState, dateFromTo),\n      children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '50px'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(TableLeagueMatches, {\n      dataTable: league\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LeagueCalendar, \"EY69qkf7M9fIhT/Qh5f4ccPUhxc=\", false, function () {\n  return [useHistory];\n});\n\n_c = LeagueCalendar;\n\nconst mapStateToProps = state => ({\n  loading: state.app.loading,\n  season: state.leagues.season,\n  errorMessage: state.leagues.errorMessage,\n  dateFromTo: state.leagues.dateFromTo\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getErrorMessage: response => dispatch(getErrorMessage(response)),\n    nullifyErrorMessage: () => dispatch(nullifyErrorMessage()),\n    nullifyYearSeason: () => dispatch(nullifyYearSeason()),\n    getDateFromTo: respons => dispatch(getDateFromTo(respons)),\n    nullifyDateFromTo: () => dispatch(nullifyDateFromTo())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueCalendar);\n\nvar _c;\n\n$RefreshReg$(_c, \"LeagueCalendar\");","map":{"version":3,"sources":["D:/__Project/SoccerStat/soccer-stat-app/src/pages/Matches.tsx"],"names":["React","useState","useEffect","useHistory","getMatches","Loading","SportsSoccerIcon","TableLeagueMatches","CustomSelect","connect","getErrorMessage","nullifyErrorMessage","nullifyYearSeason","getDateFromTo","nullifyDateFromTo","CustomDatePicker","Button","URL_LEAGUES","LeagueCalendar","props","season","errorMessage","dateFromTo","url","console","log","league","setLeague","title","setTitle","count","setCount","idLocalState","setIdLocalState","yearSeason","setYearSeason","fromTo","setFromTo","dateFrom","dateTo","history","getMatchesId","idLeague","seasonLeague","getDateFromToLeague","year","then","result","message","matches","map","item","id","awayTeam","name","homeTeam","winner","score","startDate","endDate","status","competition","URL_TEAMS","error","getMatchesFromTo","push","location","pathname","substr","idSeason","idDateFromTo","search","length","event","preventDefault","marginTop","mapStateToProps","state","loading","app","leagues","mapDispatchToProps","dispatch","response","respons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getMatches } from '../requests/getData';\r\nimport Loading from \"../components/Loading\";\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport TableLeagueMatches from \"../components/TableLeagueMatches\";\r\nimport CustomSelect from \"../components/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tgetErrorMessage,\r\n\tnullifyErrorMessage,\r\n\tnullifyYearSeason,\r\n\tgetDateFromTo,\r\n\tnullifyDateFromTo\r\n} from \"../redux/actions\";\r\nimport CustomDatePicker from \"../components/DatePicker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { URL_LEAGUES, URL_COMANDS } from './../constants';\r\n\r\n\r\n// TODO: Вынести интерфейсы в отдельный файл \r\nexport interface matchesInterface {\r\n\t[x: string]: any;\r\n\tid: number | string,\r\n\tawayTeam: any,\r\n\thomeTeam: any,\r\n\twinner: string,\r\n\tendDate: string,\r\n\tstartDate: string,\r\n\tstatus: string\r\n}\r\n\r\nexport interface objectSearchFromTo {\r\n\tdateFrom: number | string,\r\n\tdateTo: number | string,\r\n}\r\n\r\nconst LeagueCalendar = (props: any) => {\r\n\tconst {\r\n\t\tseason,\r\n\t\tgetErrorMessage,\r\n\t\tnullifyErrorMessage,\r\n\t\terrorMessage,\r\n\t\tnullifyYearSeason,\r\n\t\tdateFromTo,\r\n\t\turl\r\n\t} = props\r\n\r\n\tconsole.log('url = props ', url)\r\n\tconst [league, setLeague] = useState(\"\")\r\n\tconst [title, setTitle] = useState(\"\")\r\n\tconst [count, setCount] = useState(\"\")\r\n\tconst [idLocalState, setIdLocalState] = useState('')\r\n\tconst [yearSeason, setYearSeason] = useState('')\r\n\tconst [fromTo, setFromTo] = useState({ dateFrom: '', dateTo: '' })\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst getMatchesId = (idLeague: any, seasonLeague?: any, getDateFromToLeague?: any) => {\r\n\t\tlet year = '';\r\n\t\tif (seasonLeague) {\r\n\t\t\tyear = seasonLeague;\r\n\t\t}\r\n\t\tlet fromTo = '';\r\n\t\tif (getDateFromToLeague) {\r\n\t\t\tfromTo = getDateFromToLeague;\r\n\t\t}\r\n\t\ttry {\r\n\r\n\t\t\tgetMatches(url, idLeague, year, fromTo).then(result => {\r\n\r\n\t\t\t\tconsole.log('getMatches(url, idLeague, year, fromTo) - url - ', url)\r\n\t\t\t\tconsole.log('getMatches(url, idLeague, year, fromTo) - id- ', idLeague)\r\n\r\n\t\t\t\tif (result.message) {\r\n\t\t\t\t\treturn getErrorMessage(result.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst matches = result.matches.map((item: matchesInterface) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tawayTeam: item.awayTeam.name,\r\n\t\t\t\t\t\thomeTeam: item.homeTeam.name,\r\n\t\t\t\t\t\twinner: item.score.winner,\r\n\t\t\t\t\t\tstartDate: item.season.startDate,\r\n\t\t\t\t\t\tendDate: item.season.endDate,\r\n\t\t\t\t\t\tstatus: item.status\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tnullifyErrorMessage()\r\n\t\t\t\tsetLeague(matches)\r\n\t\t\t\tif (url === URL_LEAGUES) { setTitle(result.competition.name) }\r\n\t\t\t\tif (url === URL_TEAMS) { setTitle(result.competition.name) }\r\n\t\t\t\tsetCount(result.count)\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getMatchesFromTo = (id: number | string, dateFromTo: objectSearchFromTo) => {\r\n\t\tnullifyYearSeason()\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\thistory.push(`?dateFrom=${dateFromTo.dateFrom}&dateTo=${dateFromTo.dateTo}`)\r\n\t\tgetMatchesId(id, null, dateFromTo)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetYearSeason('')\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\r\n\t\tconst id = history.location.pathname.substr(7, 9)\r\n\t\tconsole.log('history.location.pathname ', history.location.pathname)\r\n\t\tsetIdLocalState(id)\r\n\r\n\t\tlet idSeason = '';\r\n\t\tlet idDateFromTo = {\r\n\t\t\tdateFrom: '',\r\n\t\t\tdateTo: ''\r\n\t\t}\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\tsetYearSeason('')\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 6) === 'season') {\r\n\r\n\t\t\tconsole.log('history.location.search.substrsubstr(1, 6) - ', history.location.search.substr(1, 6))\r\n\r\n\t\t\tidSeason = history.location.search.substr(-4);\r\n\t\t\tsetYearSeason(history.location.search.substr(-4))\r\n\t\t}\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 8) === 'dateFrom') {\r\n\r\n\t\t\tconsole.log('history.location.search.substr(1, 8) - ', history.location.search.substr(1, 8));\r\n\t\t\tidDateFromTo = {\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t}\r\n\t\t\tsetFromTo({\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (id && idDateFromTo.dateFrom.length && idDateFromTo.dateTo.length) {\r\n\t\t\tgetMatchesId(id, null, idDateFromTo)\r\n\t\t} else if (id && idSeason) {\r\n\t\t\tgetMatchesId(id, idSeason);\r\n\t\t} else if (id && season) {\r\n\t\t\tgetMatchesId(id, season);\r\n\t\t} else if (id) {\r\n\t\t\tconsole.log('getMatchesId(id) ', id)\r\n\t\t\tgetMatchesId(id);\r\n\t\t}\r\n\r\n\t}, [season, dateFromTo])\r\n\r\n\tconsole.log('fromTo ', fromTo)\r\n\tconsole.log('dateFromTo ', dateFromTo)\r\n\r\n\tif (!league && !errorMessage) {\r\n\t\treturn <Loading />\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* TODO: динамически подставлять иконку в зависимости от раздела лиги/команды */}\r\n\t\t\t<h1>{title ? <><SportsSoccerIcon /> <span>{title} - {errorMessage ? 0 : count} матчей</span></> : \"\"}</h1>\r\n\t\t\t<form onSubmit={(event) => event.preventDefault()}>\r\n\t\t\t\t<CustomSelect startValue={yearSeason ? yearSeason : \"\"} />\r\n\t\t\t</form>\r\n\t\t\t<h3 style={{ marginTop: \"0\" }}>или</h3>\r\n\t\t\t<CustomDatePicker\r\n\t\t\t\tstarDateFromTo={fromTo.dateFrom.length && fromTo.dateTo.length ? fromTo : \"\"} />\r\n\t\t\t<Button onClick={() => getMatchesFromTo(idLocalState, dateFromTo)}>Поиск</Button>\r\n\t\t\t{\r\n\t\t\t\terrorMessage\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<h1 style={{ marginTop: '50px' }}>{errorMessage}</h1>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t< TableLeagueMatches dataTable={league} />\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tloading: state.app.loading,\r\n\tseason: state.leagues.season,\r\n\terrorMessage: state.leagues.errorMessage,\r\n\tdateFromTo: state.leagues.dateFromTo,\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tgetErrorMessage: (response: string) => dispatch(getErrorMessage(response)),\r\n\t\tnullifyErrorMessage: () => dispatch(nullifyErrorMessage()),\r\n\t\tnullifyYearSeason: () => dispatch(nullifyYearSeason()),\r\n\t\tgetDateFromTo: (respons: object) => dispatch(getDateFromTo(respons)),\r\n\t\tnullifyDateFromTo: () => dispatch(nullifyDateFromTo()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueCalendar);"]},"metadata":{},"sourceType":"module"}