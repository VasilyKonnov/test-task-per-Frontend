[{"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\reportWebVitals.ts":"1","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\types.tsx":"2","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\reducers\\appReducer.tsx":"3","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Loading.tsx":"4","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\TableLeagueMatches.tsx":"5","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Warning.tsx":"6","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\actions.tsx":"7","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\DatePicker.tsx":"8","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\App.tsx":"9","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\requests\\getData.tsx":"10","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\sagas\\sagas.tsx":"11","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Select.tsx":"12","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\ItemLeagues.tsx":"13","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\ComandList.tsx":"14","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\LeaguesList.tsx":"15","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\TableTeams.tsx":"16","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\constants.tsx":"17","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\Matches.tsx":"18","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\LeagueCalendar.tsx":"19","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\ComandCalendar.tsx":"20","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\reducers\\matchesReducer.tsx":"21","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\index.tsx":"22","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\rootReducer.tsx":"23","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Header.tsx":"24","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\HighlightText.js":"25","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Search.tsx":"26"},{"size":440,"mtime":1613457252141,"results":"27","hashOfConfig":"28"},{"size":659,"mtime":1613457252139,"results":"29","hashOfConfig":"28"},{"size":383,"mtime":1613457252129,"results":"30","hashOfConfig":"28"},{"size":277,"mtime":1613091294039,"results":"31","hashOfConfig":"28"},{"size":2494,"mtime":1613457252100,"results":"32","hashOfConfig":"28"},{"size":538,"mtime":1613444298145,"results":"33","hashOfConfig":"28"},{"size":1396,"mtime":1613323446730,"results":"34","hashOfConfig":"28"},{"size":2655,"mtime":1613457252083,"results":"35","hashOfConfig":"28"},{"size":1006,"mtime":1613323446601,"results":"36","hashOfConfig":"28"},{"size":2070,"mtime":1613323154393,"results":"37","hashOfConfig":"28"},{"size":1193,"mtime":1613323446772,"results":"38","hashOfConfig":"28"},{"size":2229,"mtime":1613323446615,"results":"39","hashOfConfig":"28"},{"size":858,"mtime":1613457252091,"results":"40","hashOfConfig":"28"},{"size":2451,"mtime":1613443930335,"results":"41","hashOfConfig":"28"},{"size":2641,"mtime":1613437158409,"results":"42","hashOfConfig":"28"},{"size":2684,"mtime":1613457252102,"results":"43","hashOfConfig":"28"},{"size":243,"mtime":1613457252106,"results":"44","hashOfConfig":"28"},{"size":5599,"mtime":1613323446723,"results":"45","hashOfConfig":"28"},{"size":222,"mtime":1613323446690,"results":"46","hashOfConfig":"28"},{"size":227,"mtime":1613457252113,"results":"47","hashOfConfig":"28"},{"size":1101,"mtime":1613322869192,"results":"48","hashOfConfig":"28"},{"size":975,"mtime":1612729467569,"results":"49","hashOfConfig":"28"},{"size":265,"mtime":1613323446760,"results":"50","hashOfConfig":"28"},{"size":3299,"mtime":1613459079200,"results":"51","hashOfConfig":"28"},{"size":953,"mtime":1613443807867,"results":"52","hashOfConfig":"28"},{"size":1326,"mtime":1613458979909,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1in9vxj",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\reportWebVitals.ts",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\types.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\reducers\\appReducer.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Loading.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\TableLeagueMatches.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Warning.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\actions.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\DatePicker.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\App.tsx",[],["111","112"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\requests\\getData.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\sagas\\sagas.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Select.tsx",["113","114"],"import React, { ChangeEvent, useEffect } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { connect } from 'react-redux';\r\nimport { getYearSeason, nullifyDateFromTo } from \"../redux/actions\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tformControl: {\r\n\t\t\tmarginBottom: theme.spacing(3),\r\n\t\t\twidth: \"50%\",\r\n\t\t\tcolor: \"#34A5DD\"\r\n\t\t}\r\n\t}),\r\n);\r\n\r\nconst getMenuItemYers = (beforeThisYear: number) => {\r\n\tlet i: number;\r\n\tconst arrayYers: any = [];\r\n\tfor (i = 2021; i >= beforeThisYear; i--) {\r\n\t\tarrayYers.push(i)\r\n\t}\r\n\treturn arrayYers;\r\n}\r\n\r\nfunction CustomSelect(props: any) {\r\n\r\n\tconst { getYearSeason, season, startValue, nullifyDateFromTo } = props;\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleChange = (event: ChangeEvent<{ value: unknown }>) => {\r\n\t\tgetYearSeason(event.target.value as number)\r\n\t};\r\n\treturn (\r\n\t\t<FormControl className={classes.formControl} >\r\n\t\t\t<InputLabel className=\"custom-inputLabel\" id=\"controlled-open-select-label\">Выберите год</InputLabel>\r\n\t\t\t<Select\r\n\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\tid=\"controlled-open-select\"\r\n\t\t\t\tvalue={startValue.length ? startValue : season}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t>\r\n\t\t\t\t<MenuItem value={\"\"} >\r\n\t\t\t\t\t<em>Выберите год</em>\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t{getMenuItemYers(2016).map((year: number, index: any) => (\r\n\t\t\t\t\t<MenuItem className=\"select-data\" key={index} value={year}>\r\n\t\t\t\t\t\t<Link className=\"select-data--link\" to={`?season=${year}`}>\r\n\t\t\t\t\t\t\t{year}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl >\r\n\t);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tseason: state.leagues.season\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tgetYearSeason: (season: any) => dispatch(getYearSeason(season)),\r\n\t\tnullifyDateFromTo: () => dispatch(nullifyDateFromTo()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomSelect);","D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\ItemLeagues.tsx",["115"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\ComandList.tsx",["116"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\LeaguesList.tsx",["117"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\TableTeams.tsx",["118"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\constants.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\Matches.tsx",["119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getMatches } from '../requests/getData';\r\nimport Loading from \"../components/Loading\";\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport TableLeagueMatches from \"../components/TableLeagueMatches\";\r\nimport CustomSelect from \"../components/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tgetErrorMessage,\r\n\tnullifyErrorMessage,\r\n\tnullifyYearSeason,\r\n\tgetDateFromTo,\r\n\tnullifyDateFromTo\r\n} from \"../redux/actions\";\r\nimport CustomDatePicker from \"../components/DatePicker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { URL_LEAGUES, URL_COMANDS } from './../constants';\r\n\r\n\r\nexport interface matchesInterface {\r\n\t[x: string]: any;\r\n\tid: number | string,\r\n\tawayTeam: any,\r\n\thomeTeam: any,\r\n\twinner: string,\r\n\tendDate: string,\r\n\tstartDate: string,\r\n\tstatus: string\r\n}\r\n\r\nexport interface objectSearchFromTo {\r\n\tdateFrom: number | string,\r\n\tdateTo: number | string,\r\n}\r\n\r\nconst LeagueCalendar = (props: any) => {\r\n\tconst {\r\n\t\tseason,\r\n\t\tgetErrorMessage,\r\n\t\tnullifyErrorMessage,\r\n\t\terrorMessage,\r\n\t\tnullifyYearSeason,\r\n\t\tdateFromTo,\r\n\t\turl\r\n\t} = props\r\n\r\n\tconst [league, setLeague] = useState(\"\")\r\n\tconst [title, setTitle] = useState(\"\")\r\n\tconst [count, setCount] = useState(\"\")\r\n\tconst [idLocalState, setIdLocalState] = useState('')\r\n\tconst [yearSeason, setYearSeason] = useState('')\r\n\tconst [fromTo, setFromTo] = useState({ dateFrom: '', dateTo: '' })\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst getMatchesId = (idLeague: any, seasonLeague?: any, getDateFromToLeague?: any) => {\r\n\t\tlet year = '';\r\n\t\tif (seasonLeague) {\r\n\t\t\tyear = seasonLeague;\r\n\t\t}\r\n\t\tlet fromTo = '';\r\n\t\tif (getDateFromToLeague) {\r\n\t\t\tfromTo = getDateFromToLeague;\r\n\t\t}\r\n\t\ttry {\r\n\r\n\t\t\tgetMatches(url, idLeague, year, fromTo).then(result => {\r\n\r\n\t\t\t\tif (result.message) {\r\n\t\t\t\t\treturn getErrorMessage(result.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst matches = result.matches.map((item: matchesInterface) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tawayTeam: item.awayTeam.name,\r\n\t\t\t\t\t\thomeTeam: item.homeTeam.name,\r\n\t\t\t\t\t\twinner: item.score.winner,\r\n\t\t\t\t\t\tstartDate: item.season.startDate,\r\n\t\t\t\t\t\tendDate: item.season.endDate,\r\n\t\t\t\t\t\tstatus: item.status\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tnullifyErrorMessage()\r\n\t\t\t\tsetLeague(matches)\r\n\t\t\t\tif (url === URL_LEAGUES) { setTitle(result.competition.name) }\r\n\t\t\t\tsetCount(result.count)\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getMatchesFromTo = (id: number | string, dateFromTo: objectSearchFromTo) => {\r\n\t\tnullifyYearSeason()\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\thistory.push(`?dateFrom=${dateFromTo.dateFrom}&dateTo=${dateFromTo.dateTo}`)\r\n\t\tgetMatchesId(id, null, dateFromTo)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetYearSeason('')\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\tlet id = \"\";\r\n\t\tif (url === URL_LEAGUES) { id = history.location.pathname.substr(9) }\r\n\t\tif (url === URL_COMANDS) { id = history.location.pathname.substr(7) }\r\n\r\n\t\tsetIdLocalState(id)\r\n\r\n\t\tlet idSeason = '';\r\n\t\tlet idDateFromTo = {\r\n\t\t\tdateFrom: '',\r\n\t\t\tdateTo: ''\r\n\t\t}\r\n\t\tsetFromTo({ dateFrom: '', dateTo: '' })\r\n\t\tsetYearSeason('')\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 6) === 'season') {\r\n\t\t\tidSeason = history.location.search.substr(-4);\r\n\t\t\tsetYearSeason(history.location.search.substr(-4))\r\n\t\t}\r\n\r\n\r\n\t\tif (history.location.search.substr(1, 8) === 'dateFrom') {\r\n\t\t\tidDateFromTo = {\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t}\r\n\t\t\tsetFromTo({\r\n\t\t\t\tdateFrom: history.location.search.substr(10, 10),\r\n\t\t\t\tdateTo: history.location.search.substr(-10)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (id && idDateFromTo.dateFrom.length && idDateFromTo.dateTo.length) {\r\n\t\t\tgetMatchesId(id, null, idDateFromTo)\r\n\t\t} else if (id && idSeason) {\r\n\t\t\tgetMatchesId(id, idSeason);\r\n\t\t} else if (id && season) {\r\n\t\t\tgetMatchesId(id, season);\r\n\t\t} else if (id) {\r\n\t\t\tgetMatchesId(id);\r\n\t\t}\r\n\r\n\t}, [season, dateFromTo])\r\n\r\n\tif (!league && !errorMessage) {\r\n\t\treturn <Loading />\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1><>\r\n\t\t\t\t{url === URL_LEAGUES ? <SportsSoccerIcon /> : <PeopleIcon />}\r\n\t\t\t\t<span>{title ? title : \"\"}  {errorMessage ? 0 : count} матчей</span></></h1>\r\n\r\n\t\t\t{url === URL_LEAGUES\r\n\t\t\t\t?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<CustomSelect startValue={yearSeason ? yearSeason : \"\"} />\r\n\t\t\t\t\t<h3 style={{ marginTop: \"0\" }}>или</h3>\r\n\t\t\t\t</>\r\n\t\t\t\t:\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\r\n\r\n\t\t\t<CustomDatePicker\r\n\t\t\t\tstarDateFromTo={fromTo.dateFrom.length && fromTo.dateTo.length ? fromTo : \"\"}\r\n\t\t\t/>\r\n\t\t\t<Button className='search-matches' onClick={() => getMatchesFromTo(idLocalState, dateFromTo)}>Фильтр по дате (с, по)</Button>\r\n\t\t\t{\r\n\t\t\t\terrorMessage\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<h1 style={{ marginTop: '50px' }}>{errorMessage}</h1>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t< TableLeagueMatches dataTable={league} />\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tloading: state.app.loading,\r\n\tseason: state.leagues.season,\r\n\terrorMessage: state.leagues.errorMessage,\r\n\tdateFromTo: state.leagues.dateFromTo,\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tgetErrorMessage: (response: string) => dispatch(getErrorMessage(response)),\r\n\t\tnullifyErrorMessage: () => dispatch(nullifyErrorMessage()),\r\n\t\tnullifyYearSeason: () => dispatch(nullifyYearSeason()),\r\n\t\tgetDateFromTo: (respons: object) => dispatch(getDateFromTo(respons)),\r\n\t\tnullifyDateFromTo: () => dispatch(nullifyDateFromTo()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueCalendar);",["121","122"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\LeagueCalendar.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\pages\\ComandCalendar.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\reducers\\matchesReducer.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\index.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\redux\\rootReducer.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Header.tsx",[],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\HighlightText.js",[],["123","124"],"D:\\__Project\\SoccerStat\\soccer-stat-app\\src\\components\\Search.tsx",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":30,"nodeType":"132","messageId":"133","endLine":1,"endColumn":39},{"ruleId":"130","severity":1,"message":"134","line":34,"column":45,"nodeType":"132","messageId":"133","endLine":34,"endColumn":62},{"ruleId":"135","severity":1,"message":"136","line":13,"column":7,"nodeType":"132","messageId":"137","endLine":13,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":46,"column":5,"nodeType":"140","endLine":46,"endColumn":7,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":44,"column":5,"nodeType":"140","endLine":44,"endColumn":7,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":68,"column":26,"nodeType":"146","endLine":68,"endColumn":82},{"ruleId":"138","severity":1,"message":"147","line":149,"column":5,"nodeType":"140","endLine":149,"endColumn":25,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":156,"column":4,"nodeType":"146","endLine":156,"endColumn":8},{"ruleId":"126","replacedBy":"151"},{"ruleId":"128","replacedBy":"152"},{"ruleId":"126","replacedBy":"153"},{"ruleId":"128","replacedBy":"154"},{"ruleId":"130","severity":1,"message":"155","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'nullifyDateFromTo' is assigned a value but never used.","@typescript-eslint/no-redeclare","'ItemLeagues' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestTeams'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'requestLeagues'. Either include it or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getMatchesId', 'history.location.pathname', 'history.location.search', and 'url'. Either include them or remove the dependency array.",["160"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["156"],["157"],["156"],["157"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [requestTeams]",{"range":"167","text":"168"},"Update the dependencies array to be: [requestLeagues]",{"range":"169","text":"170"},"Update the dependencies array to be: [season, dateFromTo, url, history.location.search, history.location.pathname, getMatchesId]",{"range":"171","text":"172"},[1463,1465],"[requestTeams]",[1467,1469],"[requestLeagues]",[4037,4057],"[season, dateFromTo, url, history.location.search, history.location.pathname, getMatchesId]"]